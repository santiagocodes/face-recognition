{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projectos\\\\GitHub\\\\zero-to-mastery\\\\face-recognition\\\\client\\\\src\\\\App.js\";\nimport React from 'react';\nimport Particles from 'react-particles-js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onPictureSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch('http://localhost:3000/imageurl', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      }).then(response => response.json()).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }), route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onPictureSubmit: this.onPictureSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }\n    })) : route === 'signin' ? /*#__PURE__*/React.createElement(SignIn, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 16\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 16\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Projectos/GitHub/zero-to-mastery/face-recognition/client/src/App.js"],"names":["React","Particles","FaceRecognition","Navigation","SignIn","Register","ImageLinkForm","Rank","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","App","Component","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","onPictureSubmit","state","fetch","method","headers","body","JSON","stringify","then","response","json","count","Object","assign","catch","console","log","err","onRouteChange","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Particles from 'react-particles-js';\r\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport SignIn from './components/SignIn/SignIn';\r\nimport Register from './components/Register/Register';\r\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\r\nimport Rank from './components/Rank/Rank';\r\nimport './App.css';\r\n\r\nconst particlesOptions = {\r\n   particles: {\r\n      number: {\r\n         value: 30,\r\n         density: {\r\n            enable: true,\r\n            value_area: 800,\r\n         },\r\n      },\r\n   },\r\n};\r\n\r\nconst initialState = {\r\n   input: '',\r\n   imageUrl: '',\r\n   box: {},\r\n   route: 'signin',\r\n   isSignedIn: false,\r\n   user: {\r\n      id: '',\r\n      name: '',\r\n      email: '',\r\n      entries: 0,\r\n      joined: '',\r\n   },\r\n};\r\n\r\nclass App extends React.Component {\r\n   constructor() {\r\n      super();\r\n      this.state = initialState;\r\n   }\r\n\r\n   loadUser = (data) => {\r\n      this.setState({\r\n         user: {\r\n            id: data.id,\r\n            name: data.name,\r\n            email: data.email,\r\n            entries: data.entries,\r\n            joined: data.joined,\r\n         },\r\n      });\r\n   };\r\n\r\n   calculateFaceLocation = (data) => {\r\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\r\n      const image = document.getElementById('inputimage');\r\n      const width = Number(image.width);\r\n      const height = Number(image.height);\r\n      return {\r\n         leftCol: clarifaiFace.left_col * width,\r\n         topRow: clarifaiFace.top_row * height,\r\n         rightCol: width - clarifaiFace.right_col * width,\r\n         bottomRow: height - clarifaiFace.bottom_row * height,\r\n      };\r\n   };\r\n\r\n   displayFaceBox = (box) => {\r\n      this.setState({ box: box });\r\n   };\r\n\r\n   onInputChange = (event) => {\r\n      this.setState({ input: event.target.value });\r\n   };\r\n\r\n   onPictureSubmit = () => {\r\n      this.setState({ imageUrl: this.state.input });\r\n      fetch('http://localhost:3000/imageurl', {\r\n         method: 'post',\r\n         headers: { 'Content-Type': 'application/json' },\r\n         body: JSON.stringify({\r\n            input: this.state.input,\r\n         }),\r\n      })\r\n         .then((response) => response.json())\r\n         .then((response) => {\r\n            if (response) {\r\n               fetch('http://localhost:3000/image', {\r\n                  method: 'put',\r\n                  headers: { 'Content-Type': 'application/json' },\r\n                  body: JSON.stringify({\r\n                     id: this.state.user.id,\r\n                  }),\r\n               })\r\n                  .then((response) => response.json())\r\n                  .then((count) => {\r\n                     this.setState(\r\n                        Object.assign(this.state.user, { entries: count })\r\n                     );\r\n                  })\r\n                  .catch(console.log);\r\n            }\r\n            this.displayFaceBox(this.calculateFaceLocation(response));\r\n         })\r\n         .catch((err) => console.log(err));\r\n   };\r\n\r\n   onRouteChange = (route) => {\r\n      if (route === 'signout') {\r\n         this.setState(initialState);\r\n      } else if (route === 'home') {\r\n         this.setState({ isSignedIn: true });\r\n      }\r\n      this.setState({ route: route });\r\n   };\r\n\r\n   render() {\r\n      const { isSignedIn, imageUrl, route, box } = this.state;\r\n      return (\r\n         <div className=\"App\">\r\n            <Particles className=\"particles\" params={particlesOptions} />\r\n            <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\r\n            {route === 'home' ? (\r\n               <div>\r\n                  <Rank\r\n                     name={this.state.user.name}\r\n                     entries={this.state.user.entries}\r\n                  />\r\n                  <ImageLinkForm\r\n                     onInputChange={this.onInputChange}\r\n                     onPictureSubmit={this.onPictureSubmit}\r\n                  />\r\n                  <FaceRecognition box={box} imageUrl={imageUrl} />\r\n               </div>\r\n            ) : route === 'signin' ? (\r\n               <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\r\n            ) : (\r\n               <Register\r\n                  loadUser={this.loadUser}\r\n                  onRouteChange={this.onRouteChange}\r\n               />\r\n            )}\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}